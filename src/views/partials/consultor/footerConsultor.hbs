<!-- ****************** Required JS - DASHBOARD ****************** -->
<script src="../vendor/js/Chart.bundle.min.js"></script>
{{!-- <script src="../vendor/js/owl.carousel.js"></script> --}}
<!-- Chart piety plugin files -->
<script src="../vendor/js/jquery.peity.min.js"></script>
<!-- Apex Chart -->
<script src="../vendor/js/apexchart.js"></script>
<!-- Dashboard ADMIN -->
<script src="../vendor/js/adminDashboard.js"></script>
<!-- DATATABLES ADMIN -->
<script src="../vendor/datatables/js/jquery.dataTables.min.js"></script>
<script src="../vendor/js/datatables.init.js"></script>
<script src="../vendor/js/personalScripts.js"></script>

{{!-- Gráfica de Indicadores - Dashboard Principal --}}
<script>

    (function ($) {

        var dzSparkLine = function () {
            let draw = Chart.controllers.line.__super__.draw; //draw shadow
            var screenWidth = $(window).width();

            /** GRÁFICA PARA INDICADORES */

		let chartIndicadores1 = function () {
			let valAnalisis1 = document.getElementById('jsonAnalisis1').value;
			let valAnalisis2 = document.getElementById('jsonAnalisis2').value;
			let nuevosProyectos = document.getElementById('nuevosProyectos').value;
			let chartAnalisis1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
			let chartAnalisis2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

			if (valAnalisis1) {
				valAnalisis1 = JSON.parse(valAnalisis1)
				chartAnalisis1 = [valAnalisis1.producto, valAnalisis1.administracion, valAnalisis1.talento_humano, valAnalisis1.finanzas, valAnalisis1.servicio_cliente, valAnalisis1.operaciones, valAnalisis1.ambiente_laboral, valAnalisis1.innovacion, valAnalisis1.marketing, valAnalisis1.ventas]
			}
			if (valAnalisis2) {
				valAnalisis2 = JSON.parse(valAnalisis2)
				chartAnalisis2 = [valAnalisis2.producto, valAnalisis2.administracion, valAnalisis2.talento_humano, valAnalisis2.finanzas, valAnalisis2.servicio_cliente, valAnalisis2.operaciones, valAnalisis2.ambiente_laboral, valAnalisis2.innovacion, valAnalisis2.marketing, valAnalisis2.ventas]
			}

			let valorMax = 10;
			if (nuevosProyectos == 1) {
				valorMax = 5;
			}

			if ($('#chartEmpresa1').length > 0) {
				const chartEmpresaAdm1 = document.getElementById("chartEmpresa1").getContext('2d')

				chartEmpresaAdm1.height = 100;
				new Chart(chartEmpresaAdm1, {
					type: 'bar',
					data: {
						defaultFontFamily: 'Oblivian',
						labels: ["Producto", "Admin", "T. Humano", "Finanzas", "S. Al cliente", "Operaciones", "A. Laboral", "Innovación", "Marketing", "Ventas"],
						datasets: [{
							label: "Primer análisis",
							backgroundColor: "#50368C",
							borderColor: "#50368C",
							data: chartAnalisis1,
							fill: false,
						}, 
						// {
						// 	label: "Último análisis",
						// 	fill: false,
						// 	backgroundColor: "#FED061",
						// 	borderColor: "#FED061",
						// 	data: chartAnalisis2,
						// }
					]
					},
					options: {
						legend: false,
						scales: {
							yAxes: [{
								gridLines: {
									display: true
								},
								ticks: {
									beginAtZero: true,
									min: 0, // minimum value
									max: valorMax // maximum value
								}
							}],
							xAxes: [{
								gridLines: {
									display: false
								},
								ticks: {
									fontSize: 10
								},
								barPercentage: 0.5,
								categoryPercentage: 1,
								barThickness: 14,
								maxBarThickness: 10,
							}]
						}
					}
				});
			}
		}

		let chartIndicadores2 = function () {
			let valDimensiones1 = document.getElementById('jsonDimensiones1').value;
			let valDimensiones2 = document.getElementById('jsonDimensiones2').value;
			let nuevosProyectos = document.getElementById('nuevosProyectos').value;
			let chartDimensiones1 = [0, 0, 0, 0]
			let chartDimensiones2 = [0, 0, 0, 0]
			let titulos = ["Producto", "Administración", "Operaciones", "Marketing"];

			if (valDimensiones1) {
				valDimensiones1 = JSON.parse(valDimensiones1)
			}
			
			if (nuevosProyectos == 1){
				titulos = ["Experiencia en el Rubro", "Mentalidad Empresarial", "Viabilidad del Negocio", "Estructura del Negocio"]
				chartDimensiones1 = [valDimensiones1.experiencia_rubro, valDimensiones1.mentalidad, valDimensiones1.viabilidad_, valDimensiones1.estructura]
			} else {
				chartDimensiones1 = [valDimensiones1.producto, valDimensiones1.administracion, valDimensiones1.operaciones, valDimensiones1.marketing]
			}

			if (valDimensiones2) {
				valDimensiones2 = JSON.parse(valDimensiones2)
				chartDimensiones2 = [valDimensiones2.producto, valDimensiones2.administracion, valDimensiones2.operaciones, valDimensiones2.marketing]
			}

			if ($('#chartEmpresa2').length > 0) {
				const chartEmpresaAdm2 = document.getElementById("chartEmpresa2").getContext('2d')

				chartEmpresaAdm2.height = 100;
				new Chart(chartEmpresaAdm2, {
					type: 'bar',
					data: {
						defaultFontFamily: 'Oblivian',
						labels: titulos,
						datasets: [{
							label: "Puntaje",
							backgroundColor: "#50368C",
							borderColor: "#50368C",
							data: chartDimensiones1,
							fill: false,
						}, 
						// {
						// 	label: "Último análisis",
						// 	fill: false,
						// 	backgroundColor: "#FED061",
						// 	borderColor: "#FED061",
						// 	data: chartDimensiones2,
						// }
					]
					},
					options: {
						legend: false,
						scales: {
							yAxes: [{
								gridLines: {
									display: true
								},
								ticks: {
									beginAtZero: true,
									min: 0, // minimum value
									//max: 10 // maximum value
								}
							}],
							xAxes: [{
								gridLines: {
									display: false
								},
								ticks: {
									fontSize: 10
								},
								barPercentage: 0.5,
								categoryPercentage: 1,
								barThickness: 14,
								maxBarThickness: 10,
							}]
						}
					}
				});
			}
		}

            return {
                init: function () {
                },

                load: function () {
                    chartIndicadores1();
				    chartIndicadores2();
                },

                resize: function () {
                    chartIndicadores1();
				    chartIndicadores2();
                }
            }

        }();

        jQuery(document).ready(function () {
            {{#if frmDiag.tablasVacias}}
            const btnCargarInforme = document.getElementById('btnInfDiag');
            btnCargarInforme.addEventListener("click", function () {
                Swal.fire(
                    'Lo sentimos!',
                    'Aún no sé ha llenado ningún cuestionario para subir un informe',
                    'warning'
                )
            });
            {{else}}

            const btnSubirInforme = document.getElementById("btnSubirInforme");
            const infoEstado = document.getElementById("infoEstado");
            const btnVerInforme = document.getElementById('btnVerInforme');
            const spanFecha = document.getElementById("spanFecha");
            const codigoEmpresa = document.getElementById("codigoEmpresa").value;
            const informeDiag = document.querySelector('.probarXD');
            const nombreInforme = document.querySelector('.nombreInforme').textContent;

            /* ========================= COLOCAR HORA A LA FECHA DE LA TABLA INFORMES =================================== **/

            informeDiag.addEventListener('change', (e) => {
                console.log(e)
                const file = e.target.files[0]
                // Capturando Zona Horaria Local
                const tzLocal = Intl.DateTimeFormat().resolvedOptions().timeZone;

                const formData = new FormData();
                formData.append('file', file);
                formData.append('codigoEmpresa', codigoEmpresa);
                formData.append('nombreInforme', nombreInforme);
                formData.append('zonaHoraria', tzLocal);

				console.log("!ALKSDHASKHDKASLHDKJASDHJKASHDKJASHDJKASDOASIDHASKDJHASKJDHASKJDHKAJSHDKJASHDKASDHAKSJDHKAJSDHAKSJDHKASJHDASKJDHASJKDHASKJDHASDJKAKJSDHASKJDHKASDHKASJDHKJASDHKASJDHKASJHDKJASDHJKASHDKJASHDJKASDKJASHD");

                fetch('/guardarInforme', {
                    method: 'POST',
                    body: formData,
                })
                    .then(res => res.json())
                    .catch(error => console.error('Error:', error))
                    .then(response => {
                        if (response.ok) {
                            btnVerInforme.style.display = 'block'
                            infoEstado.classList.remove("badge-warning")
                            infoEstado.classList.add("badge-success")
                            infoEstado.innerHTML = "Cargado"
                            spanFecha.innerHTML = response.fecha;
                            btnVerInforme.href = response.url

                            toastr.success("El informe ha sido cargado exitosamente", "Atención", {
                                positionClass: "toast-top-center",
                                timeOut: 5e3,
                                closeButton: !0,
                                debug: !1,
                                newestOnTop: !0,
                                progressBar: !0,
                                preventDuplicates: !0,
                                onclick: null,
                                showDuration: "300",
                                hideDuration: "1000",
                                extendedTimeOut: "1000",
                                showEasing: "swing",
                                hideEasing: "linear",
                                showMethod: "fadeIn",
                                hideMethod: "fadeOut",
                                tapToDismiss: !1
                            })

                        } else {
                            Swal.fire(
                                'Error!',
                                'No sé pudo subir el informe, intente nuevamente o contacte al soporte.',
                                'error'
                            )
                        }
                    });

            });

            {{/if}}
        });

        jQuery(window).on('load', function () {
            dzSparkLine.load();
            {{#if alertSuccess}}
            Swal.fire({
                icon: 'success',
                title: '¡Pago exitoso!',
                html: '<p>Tu pago ha sido recibido, ahora puedes continuar con la firma del acuerdo de confidencialidad.</p>'
                    + '<a href="/acuerdo-de-confidencialidad" type="button" style="background: linear-gradient(189.55deg, #FED061 -131.52%, #812082 -11.9%, #50368C 129.46%);'
                    + 'border-radius: 22px;'
                    + 'color: #fff;'
                    + 'width: 160px;'
                    + 'height: 50px;'
                    + 'text-align: center;'
                    + 'padding: 14px;'
                    + 'font-size: 17px;'
                    + 'font-weight: 300;" id="checkout-button">Firmar acuerdo</a>',
                showCancelButton: false,
                showConfirmButton: false,
            })
            {{/if}}
            {{#if alertCancel}}
                Swal.fire({
                    icon: 'error',
                    title: 'Pago Cancelado',
                    text: 'Cancelaste el proceso de pago, tómate tu tiempo e intenta nuevamente.',
                })
            {{/if}}
        });

        jQuery(window).on('resize', function () {
            setTimeout(function () { dzSparkLine.resize(); }, 1000);
        });

    })(jQuery);

</script>